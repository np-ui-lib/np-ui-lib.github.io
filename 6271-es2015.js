(self.webpackChunknp_ui_lib_app=self.webpackChunknp_ui_lib_app||[]).push([[6271],{6271:function(e,t,n){"use strict";n.r(t),n.d(t,{NpDialogDemoModule:function(){return p}});var o=n(1116),i=n(4387),a=n(9883),s=n(7368);function r(e,t){1&e&&s._uU(0," Are you sure to delete? This message is from template\n")}const l=[{path:"",component:(()=>{class e{constructor(e){this.dialogService=e,this.importText="import { NpDialogModule } from 'np-ui-lib';",this.serviceInjectText="constructor(private dialogService: NpDialogService) { }",this.dialogOpenText="this.dialogService.open('Dialog text', config, null);",this.configText='const config = new NpDialogConfig({ type:"alert" });',this.stringDialogText="this.dialogService.open('Basic dialog with string content', null, null);",this.templateDialogText="@ViewChild('dialogTemplate', { static: true }) dialogTemplate: TemplateRef<any>;\nthis.dialogService.open(this.dialogTemplate, null, null);",this.componentText='<span class="np-text-success">// ----For alert dialog, pass type="alert"</span>\nvar alert = this.dialogService.open("Message Text", config, null);\nalert.onClose.subscribe(() => {\n  <span class="np-text-success">// ----Continue with alert close"</span>\n});\n\n<span class="np-text-success">// ----For prompt dialog, pass type="prompt"</span>\nconst prompt = this.dialogService.open("Message Text", config, null);\nprompt.onClose.subscribe((data) => {\n  <span class="np-text-success">// if Ok button is clicked then returns input value as string</span>\n  <span class="np-text-success">// if Cancel button is clicked then returns input value as null</span>\n  if (data != undefined && data != null) {\n    alert(\'Ok button is clicked and input value is: \' + data);\n  } else {\n    alert(\'Cancel button is clicked\');\n  }\n});\n\n<span class="np-text-success">// ----For confirm dialog, pass type="confirm"</span>\nconst confirm = this.dialogService.open("Message Text", config, null, null);\nconfirm.onClose.subscribe((data) => {\n  <span class="np-text-success">// if Ok button is clicked then returns true</span>\n  <span class="np-text-success">// if Cancel button is clicked then returns false</span>\n  if (data) {\n    alert(\'Ok button is clicked\');\n  } else {\n    alert(\'Cancel button is clicked\');\n  }\n});'}ngOnInit(){}openAlert(){this.dialogService.open("Saved successfully.",new a.aj({type:"alert"}),null)}openPrompt(){this.dialogService.open("Enter your name",new a.aj({type:"prompt"}),null).onClose.subscribe(e=>{null!=e&&null!=e?alert("Ok button is clicked, input value is: "+e):alert("Cancel button is clicked")})}openConfirm(e){this.dialogService.open(e,new a.aj({type:"confirm",hasBackDrop:!1,styleClass:"myClass",inputId:"confirm1"}),null).onClose.subscribe(e=>{e?alert("Ok button is clicked"):alert("Cancel button is clicked")})}}return e.\u0275fac=function(t){return new(t||e)(s.Y36(a.rD))},e.\u0275cmp=s.Xpm({type:e,selectors:[["app-np-dialog-demo"]],decls:144,vars:7,consts:[[1,"page-header"],["title","Documentation"],[3,"innerText"],[1,"np-table"],[3,"innerHTML"],["title","Examples"],[1,"np-btn-group"],[1,"np-btn",3,"click"],["confirmMessage",""]],template:function(e,t){if(1&e){const e=s.EpF();s.TgZ(0,"h2",0),s._uU(1,"Dialog"),s.qZA(),s.TgZ(2,"np-tabs"),s.TgZ(3,"np-tab",1),s.TgZ(4,"np-card"),s.TgZ(5,"np-card-body"),s.TgZ(6,"b"),s._uU(7,"Module to import"),s.qZA(),s.TgZ(8,"div"),s.TgZ(9,"pre"),s._UZ(10,"code",2),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(11,"np-card"),s.TgZ(12,"np-card-body"),s.TgZ(13,"b"),s._uU(14,"NpDialogService"),s.qZA(),s.TgZ(15,"p"),s._uU(16,"Inject NpDialogService into constructor of component"),s.qZA(),s.TgZ(17,"div"),s.TgZ(18,"pre"),s._UZ(19,"code",2),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(20,"np-card"),s.TgZ(21,"np-card-body"),s.TgZ(22,"b"),s._uU(23,"How to open dialog?"),s.qZA(),s.TgZ(24,"div"),s.TgZ(25,"pre"),s._UZ(26,"code",2),s.qZA(),s.qZA(),s.TgZ(27,"b"),s._uU(28,"open(content: string | TemplateRef<any>, config: NpDialogConfig): NpDialogRef;"),s.qZA(),s.TgZ(29,"p"),s._uU(30," Here open method has 3 parameters, and this method return the overlay reference object of class "),s.TgZ(31,"b"),s._uU(32,"NpDialogRef"),s.qZA(),s.qZA(),s.TgZ(33,"table",3),s.TgZ(34,"tr"),s.TgZ(35,"th"),s._uU(36,"Parameter"),s.qZA(),s.TgZ(37,"th"),s._uU(38,"Description"),s.qZA(),s.TgZ(39,"th"),s._uU(40,"Type"),s.qZA(),s.qZA(),s.TgZ(41,"tr"),s.TgZ(42,"td"),s._uU(43,"content"),s.qZA(),s.TgZ(44,"td"),s._uU(45," Pass content of dialog "),s.TgZ(46,"pre"),s._UZ(47,"code",2),s.qZA(),s.TgZ(48,"pre"),s._UZ(49,"code",2),s.qZA(),s._uU(50," Here for dialogTemplate, let-data is available, where data is value passed in open method. "),s.qZA(),s.TgZ(51,"td"),s._uU(52,"string | TemplateRef<any>"),s.qZA(),s.qZA(),s.TgZ(53,"tr"),s.TgZ(54,"td"),s._uU(55,"config"),s.qZA(),s.TgZ(56,"td"),s._uU(57," Pass dialog config with below properties. "),s.TgZ(58,"table",3),s.TgZ(59,"tr"),s.TgZ(60,"th"),s._uU(61,"Property"),s.qZA(),s.TgZ(62,"th"),s._uU(63,"Description"),s.qZA(),s.TgZ(64,"th"),s._uU(65,"Type"),s.qZA(),s.TgZ(66,"th"),s._uU(67,"Default"),s.qZA(),s.qZA(),s.TgZ(68,"tr"),s.TgZ(69,"td"),s._uU(70,"type"),s.qZA(),s.TgZ(71,"td"),s._uU(72,'Pass any of "alert" | "confirm" | "prompt"'),s.qZA(),s.TgZ(73,"td"),s._uU(74,"string"),s.qZA(),s.TgZ(75,"td"),s._uU(76,'"alert"'),s.qZA(),s.qZA(),s.TgZ(77,"tr"),s.TgZ(78,"td"),s._uU(79,"hasBackDrop"),s.qZA(),s.TgZ(80,"td"),s._uU(81,"Has backdrop or not"),s.qZA(),s.TgZ(82,"td"),s._uU(83,"boolean"),s.qZA(),s.TgZ(84,"td"),s._uU(85,"true"),s.qZA(),s.qZA(),s.TgZ(86,"tr"),s.TgZ(87,"td"),s._uU(88,"backDropClass"),s.qZA(),s.TgZ(89,"td"),s._uU(90,"Backdrop class name"),s.qZA(),s.TgZ(91,"td"),s._uU(92,"string"),s.qZA(),s.TgZ(93,"td"),s._uU(94,"np-dialog-backdrop"),s.qZA(),s.qZA(),s.TgZ(95,"tr"),s.TgZ(96,"td"),s._uU(97,"styleClass"),s.qZA(),s.TgZ(98,"td"),s._uU(99,"Set extra class on component"),s.qZA(),s.TgZ(100,"td"),s._uU(101,"string"),s.qZA(),s._UZ(102,"td"),s.qZA(),s.TgZ(103,"tr"),s.TgZ(104,"td"),s._uU(105,"inputId"),s.qZA(),s.TgZ(106,"td"),s._uU(107,"Set id attribute"),s.qZA(),s.TgZ(108,"td"),s._uU(109,"string"),s.qZA(),s._UZ(110,"td"),s.qZA(),s.qZA(),s.TgZ(111,"pre"),s._UZ(112,"code",4),s.qZA(),s.qZA(),s.TgZ(113,"td"),s._uU(114,"NpDialogConfig"),s.qZA(),s.qZA(),s.TgZ(115,"tr"),s.TgZ(116,"td"),s._uU(117,"data"),s.qZA(),s.TgZ(118,"td"),s._uU(119," Pass data to dialog, for template this data is availabel as context. "),s.qZA(),s.TgZ(120,"td"),s._uU(121,"any"),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(122,"np-card"),s.TgZ(123,"np-card-body"),s.TgZ(124,"b"),s._uU(125,"How to subscribe onClose method of dialog?"),s.qZA(),s.TgZ(126,"p"),s.TgZ(127,"b"),s._uU(128,"open"),s.qZA(),s._uU(129," method returns overlay reference object, which has property "),s.TgZ(130,"b"),s._uU(131,"onClose: Subject<any>"),s.qZA(),s.qZA(),s.TgZ(132,"pre"),s._UZ(133,"code",4),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(134,"np-tab",5),s.TgZ(135,"div",6),s.TgZ(136,"button",7),s.NdJ("click",function(){return t.openAlert()}),s._uU(137,"Open Alert"),s.qZA(),s.TgZ(138,"button",7),s.NdJ("click",function(){return t.openPrompt()}),s._uU(139,"Open Prompt"),s.qZA(),s.TgZ(140,"button",7),s.NdJ("click",function(){s.CHM(e);const n=s.MAs(143);return t.openConfirm(n)}),s._uU(141," Open Confirm "),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.YNc(142,r,1,0,"ng-template",null,8,s.W1O)}2&e&&(s.xp6(10),s.Q6J("innerText",t.importText),s.xp6(9),s.Q6J("innerText",t.serviceInjectText),s.xp6(7),s.Q6J("innerText",t.dialogOpenText),s.xp6(21),s.Q6J("innerText",t.stringDialogText),s.xp6(2),s.Q6J("innerText",t.templateDialogText),s.xp6(63),s.Q6J("innerHTML",t.configText,s.oJD),s.xp6(21),s.Q6J("innerHTML",t.componentText,s.oJD))},directives:[a.KA,a.Qk,a.c0,a.El],encapsulation:2}),e})()}];let c=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({imports:[[i.Bz.forChild(l)],i.Bz]}),e})(),p=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({imports:[[o.ez,c,a.pe,a.i7,a.Tk]]}),e})()}}]);