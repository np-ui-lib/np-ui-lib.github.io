"use strict";(self.webpackChunknp_ui_lib_app=self.webpackChunknp_ui_lib_app||[]).push([[7848],{7848:(f,p,l)=>{l.r(p),l.d(p,{NpDialogDemoModule:()=>m});var u=l(6895),r=l(8561),i=l(5499),e=l(4650);function g(t,a){1&t&&e._uU(0," Are you sure to delete? This message is from template\n")}const d=[{path:"",component:(()=>{class t{constructor(o){this.dialogService=o,this.importText="import { NpDialogModule } from 'np-ui-lib';",this.serviceInjectText="constructor(private dialogService: NpDialogService) { }",this.dialogOpenText="this.dialogService.open('Dialog text', config, null);",this.configText='const config = new NpDialogConfig({ type:"alert" });',this.stringDialogText="this.dialogService.open('Basic dialog with string content', null, null);",this.templateDialogText="@ViewChild('dialogTemplate', { static: true }) dialogTemplate: TemplateRef<any>;\nthis.dialogService.open(this.dialogTemplate, null, null);",this.componentText='<span class="np-text-success">// ----For alert dialog, pass type="alert"</span>\nvar alert = this.dialogService.open("Message Text", config, null);\nalert.onClose.subscribe(() => {\n  <span class="np-text-success">// ----Continue with alert close"</span>\n});\n\n<span class="np-text-success">// ----For prompt dialog, pass type="prompt"</span>\nconst prompt = this.dialogService.open("Message Text", config, null);\nprompt.onClose.subscribe((data) => {\n  <span class="np-text-success">// if Ok button is clicked then returns input value as string</span>\n  <span class="np-text-success">// if Cancel button is clicked then returns input value as null</span>\n  if (data != undefined && data != null) {\n    alert(\'Ok button is clicked and input value is: \' + data);\n  } else {\n    alert(\'Cancel button is clicked\');\n  }\n});\n\n<span class="np-text-success">// ----For confirm dialog, pass type="confirm"</span>\nconst confirm = this.dialogService.open("Message Text", config, null, null);\nconfirm.onClose.subscribe((data) => {\n  <span class="np-text-success">// if Ok button is clicked then returns true</span>\n  <span class="np-text-success">// if Cancel button is clicked then returns false</span>\n  if (data) {\n    alert(\'Ok button is clicked\');\n  } else {\n    alert(\'Cancel button is clicked\');\n  }\n});'}ngOnInit(){}openAlert(){this.dialogService.open("Saved successfully.",new i.aj({type:"alert"}),null)}openPrompt(){this.dialogService.open("Enter your name",new i.aj({type:"prompt"}),null).onClose.subscribe(n=>{null!=n&&null!=n?alert("Ok button is clicked, input value is: "+n):alert("Cancel button is clicked")})}openConfirm(o){this.dialogService.open(o,new i.aj({type:"confirm",hasBackDrop:!1,styleClass:"myClass",inputId:"confirm1"}),null).onClose.subscribe(s=>{alert(s?"Ok button is clicked":"Cancel button is clicked")})}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(i.rD))},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-np-dialog-demo"]],decls:144,vars:7,consts:[[1,"page-header"],["title","Documentation"],[3,"innerText"],[1,"np-table"],[3,"innerHTML"],["title","Examples"],[1,"np-btn-group"],[1,"np-btn",3,"click"],["confirmMessage",""]],template:function(o,n){if(1&o){const s=e.EpF();e.TgZ(0,"h2",0),e._uU(1,"Dialog"),e.qZA(),e.TgZ(2,"np-tabs")(3,"np-tab",1)(4,"np-card")(5,"np-card-body")(6,"b"),e._uU(7,"Module to import"),e.qZA(),e.TgZ(8,"div")(9,"pre"),e._UZ(10,"code",2),e.qZA()()()(),e.TgZ(11,"np-card")(12,"np-card-body")(13,"b"),e._uU(14,"NpDialogService"),e.qZA(),e.TgZ(15,"p"),e._uU(16,"Inject NpDialogService into constructor of component"),e.qZA(),e.TgZ(17,"div")(18,"pre"),e._UZ(19,"code",2),e.qZA()()()(),e.TgZ(20,"np-card")(21,"np-card-body")(22,"b"),e._uU(23,"How to open dialog?"),e.qZA(),e.TgZ(24,"div")(25,"pre"),e._UZ(26,"code",2),e.qZA()(),e.TgZ(27,"b"),e._uU(28,"open(content: string | TemplateRef<any>, config: NpDialogConfig): NpDialogRef;"),e.qZA(),e.TgZ(29,"p"),e._uU(30," Here open method has 3 parameters, and this method return the overlay reference object of class "),e.TgZ(31,"b"),e._uU(32,"NpDialogRef"),e.qZA()(),e.TgZ(33,"table",3)(34,"tr")(35,"th"),e._uU(36,"Parameter"),e.qZA(),e.TgZ(37,"th"),e._uU(38,"Description"),e.qZA(),e.TgZ(39,"th"),e._uU(40,"Type"),e.qZA()(),e.TgZ(41,"tr")(42,"td"),e._uU(43,"content"),e.qZA(),e.TgZ(44,"td"),e._uU(45," Pass content of dialog "),e.TgZ(46,"pre"),e._UZ(47,"code",2),e.qZA(),e.TgZ(48,"pre"),e._UZ(49,"code",2),e.qZA(),e._uU(50," Here for dialogTemplate, let-data is available, where data is value passed in open method. "),e.qZA(),e.TgZ(51,"td"),e._uU(52,"string | TemplateRef<any>"),e.qZA()(),e.TgZ(53,"tr")(54,"td"),e._uU(55,"config"),e.qZA(),e.TgZ(56,"td"),e._uU(57," Pass dialog config with below properties. "),e.TgZ(58,"table",3)(59,"tr")(60,"th"),e._uU(61,"Property"),e.qZA(),e.TgZ(62,"th"),e._uU(63,"Description"),e.qZA(),e.TgZ(64,"th"),e._uU(65,"Type"),e.qZA(),e.TgZ(66,"th"),e._uU(67,"Default"),e.qZA()(),e.TgZ(68,"tr")(69,"td"),e._uU(70,"type"),e.qZA(),e.TgZ(71,"td"),e._uU(72,'Pass any of "alert" | "confirm" | "prompt"'),e.qZA(),e.TgZ(73,"td"),e._uU(74,"string"),e.qZA(),e.TgZ(75,"td"),e._uU(76,'"alert"'),e.qZA()(),e.TgZ(77,"tr")(78,"td"),e._uU(79,"hasBackDrop"),e.qZA(),e.TgZ(80,"td"),e._uU(81,"Has backdrop or not"),e.qZA(),e.TgZ(82,"td"),e._uU(83,"boolean"),e.qZA(),e.TgZ(84,"td"),e._uU(85,"true"),e.qZA()(),e.TgZ(86,"tr")(87,"td"),e._uU(88,"backDropClass"),e.qZA(),e.TgZ(89,"td"),e._uU(90,"Backdrop class name"),e.qZA(),e.TgZ(91,"td"),e._uU(92,"string"),e.qZA(),e.TgZ(93,"td"),e._uU(94,"np-dialog-backdrop"),e.qZA()(),e.TgZ(95,"tr")(96,"td"),e._uU(97,"styleClass"),e.qZA(),e.TgZ(98,"td"),e._uU(99,"Set extra class on component"),e.qZA(),e.TgZ(100,"td"),e._uU(101,"string"),e.qZA(),e._UZ(102,"td"),e.qZA(),e.TgZ(103,"tr")(104,"td"),e._uU(105,"inputId"),e.qZA(),e.TgZ(106,"td"),e._uU(107,"Set id attribute"),e.qZA(),e.TgZ(108,"td"),e._uU(109,"string"),e.qZA(),e._UZ(110,"td"),e.qZA()(),e.TgZ(111,"pre"),e._UZ(112,"code",4),e.qZA()(),e.TgZ(113,"td"),e._uU(114,"NpDialogConfig"),e.qZA()(),e.TgZ(115,"tr")(116,"td"),e._uU(117,"data"),e.qZA(),e.TgZ(118,"td"),e._uU(119," Pass data to dialog, for template this data is available as context. "),e.qZA(),e.TgZ(120,"td"),e._uU(121,"any"),e.qZA()()()()(),e.TgZ(122,"np-card")(123,"np-card-body")(124,"b"),e._uU(125,"How to subscribe onClose method of dialog?"),e.qZA(),e.TgZ(126,"p")(127,"b"),e._uU(128,"open"),e.qZA(),e._uU(129," method returns overlay reference object, which has property "),e.TgZ(130,"b"),e._uU(131,"onClose: Subject<any>"),e.qZA()(),e.TgZ(132,"pre"),e._UZ(133,"code",4),e.qZA()()()(),e.TgZ(134,"np-tab",5)(135,"div",6)(136,"button",7),e.NdJ("click",function(){return n.openAlert()}),e._uU(137,"Open Alert"),e.qZA(),e.TgZ(138,"button",7),e.NdJ("click",function(){return n.openPrompt()}),e._uU(139,"Open Prompt"),e.qZA(),e.TgZ(140,"button",7),e.NdJ("click",function(){e.CHM(s);const T=e.MAs(143);return e.KtG(n.openConfirm(T))}),e._uU(141," Open Confirm "),e.qZA()()()(),e.YNc(142,g,1,0,"ng-template",null,8,e.W1O)}2&o&&(e.xp6(10),e.Q6J("innerText",n.importText),e.xp6(9),e.Q6J("innerText",n.serviceInjectText),e.xp6(7),e.Q6J("innerText",n.dialogOpenText),e.xp6(21),e.Q6J("innerText",n.stringDialogText),e.xp6(2),e.Q6J("innerText",n.templateDialogText),e.xp6(63),e.Q6J("innerHTML",n.configText,e.oJD),e.xp6(21),e.Q6J("innerHTML",n.componentText,e.oJD))},dependencies:[i.KA,i.Qk,i.c0,i.El],encapsulation:2}),t})()}];let Z=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.Bz.forChild(d),r.Bz]}),t})(),m=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[u.ez,Z,i.pe,i.i7,i.Tk]}),t})()}}]);